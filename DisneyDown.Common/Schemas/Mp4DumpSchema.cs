// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using DisneyDown.Common.Schemas.;
//
//    var mp4DumpSchema = Mp4DumpSchema.FromJson(jsonString);

using System;
using System.Collections.Generic;
using Newtonsoft.Json;

namespace DisneyDown.Common.Schemas
{
public partial class Mp4DumpSchema
    {
        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("header_size")]
        public long HeaderSize { get; set; }

        [JsonProperty("size")]
        public long Size { get; set; }

        [JsonProperty("major_brand", NullValueHandling = NullValueHandling.Ignore)]
        public string MajorBrand { get; set; }

        [JsonProperty("minor_version", NullValueHandling = NullValueHandling.Ignore)]
        public long? MinorVersion { get; set; }

        [JsonProperty("compatible_brand", NullValueHandling = NullValueHandling.Ignore)]
        public string CompatibleBrand { get; set; }

        [JsonProperty("children", NullValueHandling = NullValueHandling.Ignore)]
        public Mp4DumpSchemaChild[] Children { get; set; }
    }

public partial class Mp4DumpSchema
    {
        public static Mp4DumpSchema[] FromJson(string json) => JsonConvert.DeserializeObject<Mp4DumpSchema[]>(json, DisneyDown.Common.Schemas.Converter.Settings);
    }
}
